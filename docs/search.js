window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = [{"fullname": "hojichar", "modulename": "hojichar", "kind": "module", "doc": "<h1 id=\"hojichar\">HojiChar</h1>\n\n<p><a href=\"https://badge.fury.io/py/hojichar\"><img src=\"https://badge.fury.io/py/hojichar.svg\" alt=\"PyPI version\" /></a>\n<a href=\"https://pypi.org/project/hojichar/\"><img src=\"https://img.shields.io/pypi/pyversions/hojichar.svg\" alt=\"Python Versions\" /></a>\n<a href=\"https://github.com/HojiChar/HojiChar/actions/workflows/ci.yaml\"><img src=\"https://github.com/HojiChar/HojiChar/actions/workflows/ci.yaml/badge.svg\" alt=\"CI wowkflow\" /></a>\n<a href=\"https://codecov.io/gh/HojiChar/HojiChar\"><img src=\"https://codecov.io/gh/HojiChar/HojiChar/branch/main/graph/badge.svg?token=16928I9U9Y\" alt=\"codecov\" /></a></p>\n\n<h2 id=\"-1\">\u6982\u8981</h2>\n\n<p>HojiChar \u306f\u30c6\u30ad\u30b9\u30c8\u30c7\u30fc\u30bf\u306e\u524d\u51e6\u7406\u306e\u305f\u3081\u306ePython\u30e2\u30b8\u30e5\u30fc\u30eb\u3067\u3059. \u8a00\u8a9e\u30e2\u30c7\u30eb\u69cb\u7bc9\u6642\u306a\u3069\u306b\u30b3\u30fc\u30d1\u30b9\u3092\u524d\u51e6\u7406\u3059\u308b\u76ee\u7684\u3067\u958b\u767a\u3055\u308c\u307e\u3057\u305f\u3002</p>\n\n<p><code>hojichar.filters</code> \u3067\u5b9a\u7fa9\u3055\u308c\u305f\u3001\u3042\u308b\u3044\u306f\u30e6\u30fc\u30b6\u30fc\u304c\u5b9a\u7fa9\u3057\u305f\u30c6\u30ad\u30b9\u30c8\u524d\u51e6\u7406\u30d5\u30a3\u30eb\u30bf\u3092\u675f\u306d\u3001\u3072\u3068\u3064\u306e\u524d\u51e6\u7406\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u3068\u3057\u3066\u69cb\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3088\u3046\u306b\u4f5c\u3089\u308c\u3066\u3044\u307e\u3059\u3002</p>\n\n<p>\u3053\u306e\u524d\u51e6\u7406\u30d1\u30a4\u30d7\u30e9\u30a4\u30f3\u306f\u3001<code>torchvision.transforms</code> \u306b\u7740\u60f3\u3092\u5f97\u3066\u958b\u767a\u3055\u308c\u307e\u3057\u305f\u3002</p>\n\n<h2 id=\"-2\">\u4f7f\u3044\u65b9</h2>\n\n<h3 id=\"-3\">\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</h3>\n\n<pre><code>pip install hojichar\n</code></pre>\n\n<p><strong>Poetry \u306b\u3088\u308b\u30ed\u30fc\u30ab\u30eb\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb</strong></p>\n\n<p><code>python &gt;= 3.8, poetry &gt;= 1.2</code></p>\n\n<pre><code>https://github.com/HojiChar/HojiChar.git\ncd HojiChar\npoetry install\n</code></pre>\n\n<h3 id=\"rocket-start\">Rocket start</h3>\n\n<p><code>Compose</code> \u30af\u30e9\u30b9\u3092\u4f7f\u3063\u3066\u30d5\u30a3\u30eb\u30bf\u3092\u4f5c\u6210\u3057\u307e\u3059.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">hojichar</span> <span class=\"kn\">import</span> <span class=\"n\">Compose</span><span class=\"p\">,</span> <span class=\"n\">document_filters</span>\n\n<span class=\"n\">cleaner</span> <span class=\"o\">=</span> <span class=\"n\">Compose</span><span class=\"p\">([</span>\n    <span class=\"n\">document_filters</span><span class=\"o\">.</span><span class=\"n\">JSONLoader</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s2\">&quot;text&quot;</span><span class=\"p\">),</span>\n    <span class=\"n\">document_filters</span><span class=\"o\">.</span><span class=\"n\">AcceptJapanese</span><span class=\"p\">(),</span>\n    <span class=\"n\">document_filters</span><span class=\"o\">.</span><span class=\"n\">DocumentLengthFilter</span><span class=\"p\">(</span><span class=\"n\">min_doc_len</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"n\">max_doc_len</span><span class=\"o\">=</span><span class=\"mi\">1000</span><span class=\"p\">),</span>\n    <span class=\"n\">document_filters</span><span class=\"o\">.</span><span class=\"n\">ExampleHojiChar</span><span class=\"p\">()</span>\n<span class=\"p\">])</span>\n</code></pre>\n</div>\n\n<pre><code>&gt;&gt;&gt; cleaner('{\"text\": \"\u3053\u3093\u306b\u3061\u306f\u3001\"}')\n'\u3053\u3093\u306b\u3061\u306f\u3001&lt;hojichar&gt;'\n</code></pre>\n\n<p>\u4e0a\u8a18\u306e\u30d5\u30a3\u30eb\u30bf\u3067\u306f 1. JSON\u304b\u3089<code>'text'</code> \u30ad\u30fc\u306e\u5024\u3092\u53d6\u5f97 2. \u65e5\u672c\u8a9e\u6587\u5b57\u5217\u3067\u306a\u3051\u308c\u3070\u7834\u68c4, 3. 0\u5b57\u4ee5\u4e0a1000\u5b57\u4ee5\u5185\u306e\u6587\u7ae0\u4ee5\u5916\u3092\u7834\u68c4, 4. \u6587\u5b57\u5217\u306b <code>&lt;hojichar&gt;</code> \u3092\u8ffd\u52a0 \u306e\u51e6\u7406\u3092\u3057\u3066\u3044\u307e\u3059.</p>\n\n<p>\u5b9a\u7fa9\u6e08\u307f\u306e\u30d5\u30a3\u30eb\u30bf\u306f\u3001<code>hojichar.filters</code> \u306e\u5404\u30d5\u30a3\u30eb\u30bf\u3067\u3059\u3002</p>\n\n<h3 id=\"-4\">\u30e6\u30fc\u30b6\u30fc\u5b9a\u7fa9\u30d5\u30a3\u30eb\u30bf</h3>\n\n<p><code>Filter</code> \u30af\u30e9\u30b9\u3092\u7d99\u627f\u3057, <code>apply</code> \u95a2\u6570\u5185\u306b\u30d5\u30a3\u30eb\u30bf\u306e\u6319\u52d5\u3092\u8a18\u8ff0\u3057\u307e\u3059.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span> <span class=\"nn\">hojichar.core.filter_interface</span> <span class=\"kn\">import</span> <span class=\"n\">Filter</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">YourFilter</span><span class=\"p\">(</span><span class=\"n\">Filter</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">apply</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">document</span><span class=\"p\">):</span>\n        <span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">=</span> <span class=\"n\">your_process</span><span class=\"p\">(</span><span class=\"n\">document</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">document</span>\n</code></pre>\n</div>\n\n<p><code>apply</code> \u95a2\u6570\u306f <code>hojichar.core.models.Document</code> \u578b\u3092\u5f15\u6570\u3068\u3057\u3066\u53d7\u3051\u53d6\u308a,\n\u8fd4\u3059\u95a2\u6570\u3067\u3059. <code>Document</code> \u306f\u6587\u5b57\u5217\u3092\u30ab\u30d7\u30bb\u30eb\u5316\u3057\u305f\u30af\u30e9\u30b9\u3067\u3059.</p>\n\n<h2 id=\"-5\">\u958b\u767a\u8005\u5411\u3051</h2>\n\n<p>\u958b\u767a\u7528\u306e\u30d1\u30c3\u30b1\u30fc\u30b8\u306e\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u306e\u305f\u3081\u306b,</p>\n\n<pre><code>poetry install --with dev,lint,test\n</code></pre>\n\n<h3 id=\"-6\">\u30c6\u30b9\u30c8</h3>\n\n<p>\u30c6\u30b9\u30c8\u5b9f\u884c</p>\n\n<pre><code>pytest --doctest-modules .\n</code></pre>\n\n<p>\u3067 mypy \u3068 pytest \u306e\u30c6\u30b9\u30c8\u304c\u5b9f\u884c\u3055\u308c\u307e\u3059.</p>\n\n<p>Lint</p>\n\n<pre><code>poetry run task lint\n</code></pre>\n\n<p>Format</p>\n\n<pre><code>poetry run task format\n</code></pre>\n"}, {"fullname": "hojichar.Compose", "modulename": "hojichar", "qualname": "Compose", "kind": "class", "doc": "<p>Base class for all filters.\nDocument-level filters must inherit from this class.</p>\n\n<p>The definition of filter function is in <code>apply</code> method.\nIf you define a new filter, you must define the method.\nWhen this class is called, apply the filter from string to string.</p>\n\n<p>If the filter create <code>Document.tokens</code> form <code>Document.text</code>, you\nmust implement <code>tokenize</code> method.\nIf the filter update <code>Document.text</code> by merging <code>Document.tokens</code>, you\nmust implement <code>merge</code> method.\nDo not define a filter that changes both <code>Document.text</code> and <code>Document.token</code>\nto prevent unexpected behavior.</p>\n\n<p>If you apply the filter to tokens, you can use <code>TokenFilter</code> class.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.Compose.__init__", "modulename": "hojichar", "qualname": "Compose.__init__", "kind": "function", "doc": "<p>Compose a filter from pre-defined filter-objects.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>filters : List[Union[Filter, TokenFilter]]\n    Filter instances which apply to the corpus.</p>\n\n<p>ignore_filtered : bool, optional\n    Default = True\n    If True, filters ignore a document which has <code>is_rejected</code> flag.\n    By doing so, we avoid applying filters that do not affect the output.</p>\n\n<pre><code>However, for the purpose of corpus survay, e.g., to determine how many documents\nin the corpus are removed by a certain filter, it is preferable not to be\naffected by the upstream filter. In such a case, you should\nset `ignore_filter` to False.\n</code></pre>\n\n<p>random_state : Union[None, int, np.random.Generator], optional\n    Default = None\n    Seed for applying filters randomly.\n    <code>random_state</code> must be int or np.random.Generator instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filter_interface</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">,</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filter_interface</span><span class=\"o\">.</span><span class=\"n\">TokenFilter</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_filtered</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">_generator</span><span class=\"o\">.</span><span class=\"n\">Generator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.Compose.apply", "modulename": "hojichar", "qualname": "Compose.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.Compose.summary", "modulename": "hojichar", "qualname": "Compose.summary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;print&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hojichar.Filter", "modulename": "hojichar", "qualname": "Filter", "kind": "class", "doc": "<p>Base class for all filters.\nDocument-level filters must inherit from this class.</p>\n\n<p>The definition of filter function is in <code>apply</code> method.\nIf you define a new filter, you must define the method.\nWhen this class is called, apply the filter from string to string.</p>\n\n<p>If the filter create <code>Document.tokens</code> form <code>Document.text</code>, you\nmust implement <code>tokenize</code> method.\nIf the filter update <code>Document.text</code> by merging <code>Document.tokens</code>, you\nmust implement <code>merge</code> method.\nDo not define a filter that changes both <code>Document.text</code> and <code>Document.token</code>\nto prevent unexpected behavior.</p>\n\n<p>If you apply the filter to tokens, you can use <code>TokenFilter</code> class.</p>\n"}, {"fullname": "hojichar.Filter.__init__", "modulename": "hojichar", "qualname": "Filter.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.Filter.apply", "modulename": "hojichar", "qualname": "Filter.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.Filter.filter_apply", "modulename": "hojichar", "qualname": "Filter.filter_apply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.TokenFilter", "modulename": "hojichar", "qualname": "TokenFilter", "kind": "class", "doc": "<p>Base class for token-level filters.</p>\n\n<p>Token filters, which shuld be implemented in hojichar/filters/token_filters.py,\nmust inherit from this class.</p>\n"}, {"fullname": "hojichar.TokenFilter.__init__", "modulename": "hojichar", "qualname": "TokenFilter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.TokenFilter.apply", "modulename": "hojichar", "qualname": "TokenFilter.apply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.TokenFilter.filter_apply", "modulename": "hojichar", "qualname": "TokenFilter.filter_apply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.Document", "modulename": "hojichar", "qualname": "Document", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hojichar.Document.__init__", "modulename": "hojichar", "qualname": "Document.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">is_rejected</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">tokens</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "hojichar.Document.set_tokens", "modulename": "hojichar", "qualname": "Document.set_tokens", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tokens</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.Document.get_tokens", "modulename": "hojichar", "qualname": "Document.get_tokens", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.Token", "modulename": "hojichar", "qualname": "Token", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hojichar.Token.__init__", "modulename": "hojichar", "qualname": "Token.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">is_rejected</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, {"fullname": "hojichar.core", "modulename": "hojichar.core", "kind": "module", "doc": "<p>The core utilities of <code>hojichar</code>.</p>\n"}, {"fullname": "hojichar.core.composition", "modulename": "hojichar.core.composition", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.composition.Compose", "modulename": "hojichar.core.composition", "qualname": "Compose", "kind": "class", "doc": "<p>Base class for all filters.\nDocument-level filters must inherit from this class.</p>\n\n<p>The definition of filter function is in <code>apply</code> method.\nIf you define a new filter, you must define the method.\nWhen this class is called, apply the filter from string to string.</p>\n\n<p>If the filter create <code>Document.tokens</code> form <code>Document.text</code>, you\nmust implement <code>tokenize</code> method.\nIf the filter update <code>Document.text</code> by merging <code>Document.tokens</code>, you\nmust implement <code>merge</code> method.\nDo not define a filter that changes both <code>Document.text</code> and <code>Document.token</code>\nto prevent unexpected behavior.</p>\n\n<p>If you apply the filter to tokens, you can use <code>TokenFilter</code> class.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.core.composition.Compose.__init__", "modulename": "hojichar.core.composition", "qualname": "Compose.__init__", "kind": "function", "doc": "<p>Compose a filter from pre-defined filter-objects.</p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>filters : List[Union[Filter, TokenFilter]]\n    Filter instances which apply to the corpus.</p>\n\n<p>ignore_filtered : bool, optional\n    Default = True\n    If True, filters ignore a document which has <code>is_rejected</code> flag.\n    By doing so, we avoid applying filters that do not affect the output.</p>\n\n<pre><code>However, for the purpose of corpus survay, e.g., to determine how many documents\nin the corpus are removed by a certain filter, it is preferable not to be\naffected by the upstream filter. In such a case, you should\nset `ignore_filter` to False.\n</code></pre>\n\n<p>random_state : Union[None, int, np.random.Generator], optional\n    Default = None\n    Seed for applying filters randomly.\n    <code>random_state</code> must be int or np.random.Generator instance.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">filters</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filter_interface</span><span class=\"o\">.</span><span class=\"n\">Filter</span><span class=\"p\">,</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">filter_interface</span><span class=\"o\">.</span><span class=\"n\">TokenFilter</span><span class=\"p\">]]</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_filtered</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">random_state</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">NoneType</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">_generator</span><span class=\"o\">.</span><span class=\"n\">Generator</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.core.composition.Compose.apply", "modulename": "hojichar.core.composition", "qualname": "Compose.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.composition.Compose.summary", "modulename": "hojichar.core.composition", "qualname": "Compose.summary", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"nb\">format</span><span class=\"o\">=</span><span class=\"s1\">&#39;print&#39;</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.filter_interface", "modulename": "hojichar.core.filter_interface", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.filter_interface.Filter", "modulename": "hojichar.core.filter_interface", "qualname": "Filter", "kind": "class", "doc": "<p>Base class for all filters.\nDocument-level filters must inherit from this class.</p>\n\n<p>The definition of filter function is in <code>apply</code> method.\nIf you define a new filter, you must define the method.\nWhen this class is called, apply the filter from string to string.</p>\n\n<p>If the filter create <code>Document.tokens</code> form <code>Document.text</code>, you\nmust implement <code>tokenize</code> method.\nIf the filter update <code>Document.text</code> by merging <code>Document.tokens</code>, you\nmust implement <code>merge</code> method.\nDo not define a filter that changes both <code>Document.text</code> and <code>Document.token</code>\nto prevent unexpected behavior.</p>\n\n<p>If you apply the filter to tokens, you can use <code>TokenFilter</code> class.</p>\n"}, {"fullname": "hojichar.core.filter_interface.Filter.__init__", "modulename": "hojichar.core.filter_interface", "qualname": "Filter.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"p\">:</span> <span class=\"nb\">float</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.core.filter_interface.Filter.apply", "modulename": "hojichar.core.filter_interface", "qualname": "Filter.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.filter_interface.Filter.filter_apply", "modulename": "hojichar.core.filter_interface", "qualname": "Filter.filter_apply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.filter_interface.TokenFilter", "modulename": "hojichar.core.filter_interface", "qualname": "TokenFilter", "kind": "class", "doc": "<p>Base class for token-level filters.</p>\n\n<p>Token filters, which shuld be implemented in hojichar/filters/token_filters.py,\nmust inherit from this class.</p>\n"}, {"fullname": "hojichar.core.filter_interface.TokenFilter.__init__", "modulename": "hojichar.core.filter_interface", "qualname": "TokenFilter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">p</span><span class=\"o\">=</span><span class=\"mi\">1</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.core.filter_interface.TokenFilter.apply", "modulename": "hojichar.core.filter_interface", "qualname": "TokenFilter.apply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.filter_interface.TokenFilter.filter_apply", "modulename": "hojichar.core.filter_interface", "qualname": "TokenFilter.filter_apply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.inspection", "modulename": "hojichar.core.inspection", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.inspection.Inspector", "modulename": "hojichar.core.inspection", "qualname": "Inspector", "kind": "class", "doc": "<p>Base class for all filters.\nDocument-level filters must inherit from this class.</p>\n\n<p>The definition of filter function is in <code>apply</code> method.\nIf you define a new filter, you must define the method.\nWhen this class is called, apply the filter from string to string.</p>\n\n<p>If the filter create <code>Document.tokens</code> form <code>Document.text</code>, you\nmust implement <code>tokenize</code> method.\nIf the filter update <code>Document.text</code> by merging <code>Document.tokens</code>, you\nmust implement <code>merge</code> method.\nDo not define a filter that changes both <code>Document.text</code> and <code>Document.token</code>\nto prevent unexpected behavior.</p>\n\n<p>If you apply the filter to tokens, you can use <code>TokenFilter</code> class.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.core.inspection.Inspector.__init__", "modulename": "hojichar.core.inspection", "qualname": "Inspector.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">target</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">ignore_filtered</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.core.inspection.Inspector.apply", "modulename": "hojichar.core.inspection", "qualname": "Inspector.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.inspection.Inspector.inspect", "modulename": "hojichar.core.inspection", "qualname": "Inspector.inspect", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">document</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.inspection.FilterStatistics", "modulename": "hojichar.core.inspection", "qualname": "FilterStatistics", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.inspection.FilterStatistics.__init__", "modulename": "hojichar.core.inspection", "qualname": "FilterStatistics.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">discard_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">diff_bytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">cumulative_time_ns</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "hojichar.core.inspection.FilterStatistics.get_human_readable_values", "modulename": "hojichar.core.inspection", "qualname": "FilterStatistics.get_human_readable_values", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.inspection.DocStatistics", "modulename": "hojichar.core.inspection", "qualname": "DocStatistics", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.inspection.DocStatistics.__init__", "modulename": "hojichar.core.inspection", "qualname": "DocStatistics.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">processed_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">discard_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">input_bytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">output_bytes</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">cumulative_time_ns</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">total_token_num</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span></span>)</span>"}, {"fullname": "hojichar.core.inspection.DocStatistics.get_human_readable_values", "modulename": "hojichar.core.inspection", "qualname": "DocStatistics.get_human_readable_values", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.inspection.StatisticsCounter", "modulename": "hojichar.core.inspection", "qualname": "StatisticsCounter", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.inspection.StatisticsCounter.__init__", "modulename": "hojichar.core.inspection", "qualname": "StatisticsCounter.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">inspectors</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">inspection</span><span class=\"o\">.</span><span class=\"n\">Inspector</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ignore_filtered</span></span>)</span>"}, {"fullname": "hojichar.core.inspection.StatisticsCounter.update_changes", "modulename": "hojichar.core.inspection", "qualname": "StatisticsCounter.update_changes", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>,</span><span class=\"param\">\t<span class=\"n\">before_process_inspector</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">inspection</span><span class=\"o\">.</span><span class=\"n\">Inspector</span>,</span><span class=\"param\">\t<span class=\"n\">inspectors</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">inspection</span><span class=\"o\">.</span><span class=\"n\">Inspector</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.inspection.StatisticsCounter.get_statistics", "modulename": "hojichar.core.inspection", "qualname": "StatisticsCounter.get_statistics", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.models", "modulename": "hojichar.core.models", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.models.Token", "modulename": "hojichar.core.models", "qualname": "Token", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.models.Token.__init__", "modulename": "hojichar.core.models", "qualname": "Token.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">is_rejected</span><span class=\"o\">=</span><span class=\"kc\">False</span></span>)</span>"}, {"fullname": "hojichar.core.models.Document", "modulename": "hojichar.core.models", "qualname": "Document", "kind": "class", "doc": "<p></p>\n"}, {"fullname": "hojichar.core.models.Document.__init__", "modulename": "hojichar.core.models", "qualname": "Document.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">is_rejected</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"n\">tokens</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, {"fullname": "hojichar.core.models.Document.set_tokens", "modulename": "hojichar.core.models", "qualname": "Document.set_tokens", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tokens</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.core.models.Document.get_tokens", "modulename": "hojichar.core.models", "qualname": "Document.get_tokens", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters", "modulename": "hojichar.filters", "kind": "module", "doc": "<p>Filters for text preprocess.</p>\n\n<p>Each filter module can directly import from <code>hojichar</code>. i.e., you can inport as <code>from hojichar import document_filters</code>.</p>\n\n<p>How we classify each filter is below:</p>\n\n<ul>\n<li><code>hojichar.filters.document_filters</code>-- General text cleaners. </li>\n<li><code>hojichar.filters.deduplication</code>-- Approximate deduplicate processor, inspired by NEARDUP from <a href=\"https://arxiv.org/abs/2107.06499\">https://arxiv.org/abs/2107.06499</a></li>\n<li><code>hojichar.filters.token_filters</code>-- A per-token filter. For example, to process a specific part of speech.</li>\n<li><code>hojichar.filters.tokenization</code>-- Tokenizer, which splits texts into tokens. Here, a token is an arbitrary unit for splitting a sentence and processing it with <code>hojichar.filters.token_filters</code>.</li>\n</ul>\n"}, {"fullname": "hojichar.filters.deduplication", "modulename": "hojichar.filters.deduplication", "kind": "module", "doc": "<p>\u6587\u66f8\u306e(\u8fd1\u4f3c)\u91cd\u8907\u51e6\u7406\u306e\u305f\u3081\u306e\u30e2\u30b8\u30e5\u30fc\u30eb.</p>\n"}, {"fullname": "hojichar.filters.deduplication.GenerateDedupLSH", "modulename": "hojichar.filters.deduplication", "qualname": "GenerateDedupLSH", "kind": "class", "doc": "<p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u91cd\u8907\u5224\u5b9a\u306b\u4f7f\u7528\u53ef\u80fd\u306a\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u751f\u6210\u3057\u307e\u3059\u3002\n\u30cf\u30c3\u30b7\u30e5\u5024\u306f20\u500b\u751f\u6210\u3055\u308c\u3001\u985e\u4f3c\u3059\u308b(\u2252\u7de8\u96c6\u8ddd\u96e2\u304c\u8fd1\u3044)\u6587\u7ae0\u3069\u3046\u3057\u306e\u30cf\u30c3\u30b7\u30e5\u304c\u4f3c\u308b\u6027\u8cea\u3092\u6301\u3061\u307e\u3059(Locality Sensitive Hashing)\u3002\n2\u3064\u306e\u6587\u66f8\u9593\u3067\u5c11\u306a\u304f\u3068\u30821\u3064\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u304c\u4e00\u81f4\u3059\u308b\u5834\u5408\u306b\u91cd\u8907\u3068\u3057\u3066\u5224\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\n\u751f\u6210\u3055\u308c\u305f\u30cf\u30c3\u30b7\u30e5\u306f <code>Document.dedup_lsh</code> \u5c5e\u6027\u306b\u6587\u5b57\u5217\u306e\u30ea\u30b9\u30c8\u3068\u3057\u3066\u4fdd\u5b58\u3055\u308c\u307e\u3059\u3002\n\u91cd\u8907\u51e6\u7406\u3092\u5b9f\u65bd\u3059\u308b\u5834\u5408\u306f\u3001\u672c\u30d5\u30a3\u30eb\u30bf\u3092 <code>hojichar.filters.deduplication.LSHDeduplicator</code> \u306e\u524d\u306b\u9069\u7528\u3057\u307e\u3059\u3002</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.deduplication.GenerateDedupLSH.__init__", "modulename": "hojichar.filters.deduplication", "qualname": "GenerateDedupLSH.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.deduplication.GenerateDedupLSH.n_gram_tokenize", "modulename": "hojichar.filters.deduplication", "qualname": "GenerateDedupLSH.n_gram_tokenize", "kind": "function", "doc": "<p>Tokenize a string into n-gram tokens.</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">GenerateDedupLSH</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">n_gram_tokenize</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u304a\u306f\u3088\u3046\u3054\u3056\u3044\u307e\u3059\u3002&quot;</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;\u304a\u306f\u3088&#39;, &#39;\u306f\u3088\u3046&#39;, &#39;\u3088\u3046\u3054&#39;, &#39;\u3046\u3054\u3056&#39;, &#39;\u3054\u3056\u3044&#39;, &#39;\u3056\u3044\u307e&#39;, &#39;\u3044\u307e\u3059&#39;, &#39;\u307e\u3059\u3002&#39;]</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">GenerateDedupLSH</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">n_gram_tokenize</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u304a\u306f\u3088&quot;</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;\u304a\u306f\u3088&#39;]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">n</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.deduplication.GenerateDedupLSH.hashfunc_signed_32_from_seed", "modulename": "hojichar.filters.deduplication", "qualname": "GenerateDedupLSH.hashfunc_signed_32_from_seed", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">seed</span><span class=\"p\">:</span> <span class=\"nb\">int</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.deduplication.GenerateDedupLSH.get_minhash", "modulename": "hojichar.filters.deduplication", "qualname": "GenerateDedupLSH.get_minhash", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">tokens</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>, </span><span class=\"param\"><span class=\"n\">hashfunc</span><span class=\"p\">:</span> <span class=\"n\">Callable</span><span class=\"p\">[[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">int</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.deduplication.GenerateDedupLSH.calc_lsh", "modulename": "hojichar.filters.deduplication", "qualname": "GenerateDedupLSH.calc_lsh", "kind": "function", "doc": "<p>\u30c6\u30ad\u30b9\u30c8\u304b\u3089\u91cd\u8907\u51e6\u7406\u306e\u305f\u3081\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u30b7\u30fc\u30b1\u30f3\u30b9\u3092\u751f\u6210\u3057\u307e\u3059.\n2\u6587\u66f8\u9593\u3067, \u5c11\u306a\u304f\u3068\u30821\u3064\u540c\u3058\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u4fdd\u3064\u5834\u5408, \u6587\u66f8\u306f\u91cd\u8907\u3068\u5224\u65ad\u3057\u307e\u3059.\n(\u53c2\u8003\u6587\u732e)\n<a href=\"https://arxiv.org/abs/2107.06499\">https://arxiv.org/abs/2107.06499</a> , Appendix A\n<a href=\"http://infolab.stanford.edu/~ullman/mmds/ch3n.pdf\">http://infolab.stanford.edu/~ullman/mmds/ch3n.pdf</a> Chapter 3.3</p>\n\n<p>Args:\n    text (str): \u5165\u529b\u30c6\u30ad\u30b9\u30c8</p>\n\n<p>Returns:\n    List[str]: \u30cf\u30c3\u30b7\u30e5\u5024\u306e\u30ea\u30b9\u30c8, \u5404\u30cf\u30c3\u30b7\u30e5\u5024\u306f\n    '0+07ad0b7b163f434643387f3f4799a2d466bccd0c' \u306e\u3088\u3046\u306a\u5f62\u5f0f\u3067,\n    \u5148\u982d2\u6587\u5b57\u306f\u4f55\u756a\u76ee\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u304b\u3092\u8868\u3059.\n    \u3053\u308c\u306b\u3088\u308a, \u91cd\u8907\u51e6\u7406\u30cf\u30c3\u30b7\u30e5\u3092\u4e00\u3064\u306e\u30cf\u30c3\u30b7\u30e5\u30c6\u30fc\u30d6\u30eb\u306b\u30d7\u30fc\u30eb\u3059\u308b\u3053\u3068\u3067\u91cd\u8907\u51e6\u7406\u304c\u3067\u304d\u308b.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.deduplication.GenerateDedupLSH.apply", "modulename": "hojichar.filters.deduplication", "qualname": "GenerateDedupLSH.apply", "kind": "function", "doc": "<p>\u7de8\u96c6\u8ddd\u96e2\u306e\u8fd1\u3044\u6587\u66f8\u3067\u306f\u30cf\u30c3\u30b7\u30e5\u304c\u985e\u4f3c\u3057\u307e\u3059\u3002\u6b21\u306e\u4f8b\u3067\u306f\u30015\u756a\u76ee\u306e\u30cf\u30c3\u30b7\u30e5\u306f\u5b8c\u5168\u4e00\u81f4\u3057\u3001<code>LSHDeduplicator</code> \u3067\u91cd\u8907\u3068\u5224\u5b9a\u3055\u308c\u307e\u3059\u3002</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u3002\u540d\u524d\u306f\u307e\u3060\u7121\u3044\u3002\u3069\u3053\u3067\u751f\u307e\u308c\u305f\u304b\u3068\u3093\u3068\u898b\u5f53\u304c\u3064\u304b\u306c\u3002&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u543e\u8f29\u306f\u9ce5\u3067\u3042\u308b\u3002\u540d\u524d\u306f\u307e\u3060\u7121\u3044\u3002\u3069\u3053\u3067\u751f\u307e\u308c\u305f\u304b\u3068\u3093\u3068\u898b\u5f53\u304c\u3064\u304b\u306c\u3002&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">GenerateDedupLSH</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">d1</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">d1</span><span class=\"o\">.</span><span class=\"n\">dedup_lsh</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;0+07ad0b7b163f434643387f3f4799a2d466bccd0c&#39;,</span>\n<span class=\"go\"> &#39;1+7369a7be65e9f41aa5088d4cebc7cbd4a506d702&#39;,</span>\n<span class=\"go\"> &#39;2+f62bc7aca49ef1ab0765c99d83e0ab5c4bab55b4&#39;,</span>\n<span class=\"go\"> &#39;3+a14eb2369a28d2effc886447c5c43cefd1dd4c99&#39;,</span>\n<span class=\"go\"> &#39;4+05598bc382a7b67d7740d416585f69c3c82ed7db&#39;,</span>\n<span class=\"go\"> &#39;5+4bcfd982910ba7034476fd9ba1cf04b1688265e1&#39;,</span>\n<span class=\"go\"> &#39;6+5a0d9f2c4ae08e5a695f279e042ccb1679f7fc95&#39;,</span>\n<span class=\"go\"> &#39;7+f810d30d918fb4b0a7df4dcc7fa76ab723250ebc&#39;,</span>\n<span class=\"go\"> &#39;8+8da61607a3de16c10f3e70498211990973c255c6&#39;,</span>\n<span class=\"go\"> &#39;9+c38f4fb17626f9cbbc4470424f3a3528a471a7c8&#39;,</span>\n<span class=\"go\"> &#39;10+b2b18747bae648b8f0ea62eed439605aea50c22c&#39;,</span>\n<span class=\"go\"> &#39;11+948f27853abed61d2e18e99e546975d28f74b7a9&#39;,</span>\n<span class=\"go\"> &#39;12+1c61e34046c00a32652af1a9532013cb43de6ab6&#39;,</span>\n<span class=\"go\"> &#39;13+610cf5dd9cd7bc25c92eb43a2238827c4313052d&#39;,</span>\n<span class=\"go\"> &#39;14+7fc7bbcb7d94bc531749d237d4c4d413bf1c3885&#39;,</span>\n<span class=\"go\"> &#39;15+f945ded8493498677c52c36509d879c6b0f5b765&#39;,</span>\n<span class=\"go\"> &#39;16+acbff8ad0f7bc356b953c95a4876dd5d4fd547d0&#39;,</span>\n<span class=\"go\"> &#39;17+c9c0263cfb4217ccf246a4d39e88fbad022a89b2&#39;,</span>\n<span class=\"go\"> &#39;18+cb5f7a0e4182922de50f742beb36da5d2b7f5c42&#39;,</span>\n<span class=\"go\"> &#39;19+b4557e514254043bebfe94925b563ecf79e36100&#39;]</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"n\">GenerateDedupLSH</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">d2</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">d2</span><span class=\"o\">.</span><span class=\"n\">dedup_lsh</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;0+07ad0b7b163f434608967f3f4799a2d466bccd0c&#39;,</span>\n<span class=\"go\"> &#39;1+7369d2c065e9f41a27ec8d4cebc7cbd4a50608a8&#39;,</span>\n<span class=\"go\"> &#39;2+d31ac7aca49e4e7a0765c99d6335ab5c4bab55b4&#39;,</span>\n<span class=\"go\"> &#39;3+40bcb2369a28d2effc88fe8e01b13cefd1dd4c99&#39;,</span>\n<span class=\"go\"> &#39;4+05598bc382a72b497740d416585f69c3d702d7db&#39;,</span>\n<span class=\"go\"> &#39;5+4bcfd982910ba7034476fd9ba1cf04b1688265e1&#39;,</span>\n<span class=\"go\"> &#39;6+5a0d4eb74ae08e5a695f279e0f44cb1679f7fc95&#39;,</span>\n<span class=\"go\"> &#39;7+f810d30d918fb4b0a2604dcc7fa76ab723250ebc&#39;,</span>\n<span class=\"go\"> &#39;8+8da6c577a3de16c10f3e70498211053b73c255c6&#39;,</span>\n<span class=\"go\"> &#39;9+c38f4fb17626f9cbbc4470424f3a3528a471a7c8&#39;,</span>\n<span class=\"go\"> &#39;10+ac8e8747e42d48b820c262ee066ebedeea50c22c&#39;,</span>\n<span class=\"go\"> &#39;11+948f27853abed61dbc307e28cce275d200d7b7a9&#39;,</span>\n<span class=\"go\"> &#39;12+1c613c22f78e39fbbfedf1a95320e8c543de6ab6&#39;,</span>\n<span class=\"go\"> &#39;13+5020f5dd9cd7bc25c92e4a542238827c4313052d&#39;,</span>\n<span class=\"go\"> &#39;14+e4aebbcb7d94bc533eced237d4c4d413bf1c3885&#39;,</span>\n<span class=\"go\"> &#39;15+f9451c70493498677c5276113a9400906207b765&#39;,</span>\n<span class=\"go\"> &#39;16+acbff8ad8a12ba10b953f42d35dfdd5d4fd547d0&#39;,</span>\n<span class=\"go\"> &#39;17+c9c0263cfb427852f246a4d39e88fbadf4d889b2&#39;,</span>\n<span class=\"go\"> &#39;18+36780a524182439de50f742bd3e9da5d2b7f22b8&#39;,</span>\n<span class=\"go\"> &#39;19+b4557e51e775eeb64650949276973ecf79e3a451&#39;]</span>\n</code></pre>\n</div>\n\n<p>\u5168\u304f\u7570\u306a\u308b\u6587\u66f8\u306b\u5bfe\u3057\u3066\u306f\u3001\u3044\u305a\u308c\u3082\u5168\u304f\u7570\u306a\u308b\u30cf\u30c3\u30b7\u30e5\u3092\u8fd4\u3057\u307e\u3059\u3002</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d3</span> <span class=\"o\">=</span> <span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u7947\u5712\u7cbe\u820e\u306e\u9418\u306e\u58f0\u3001\u8af8\u884c\u7121\u5e38\u306e\u97ff\u304d\u3042\u308a\u3002&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d3</span> <span class=\"o\">=</span> <span class=\"n\">GenerateDedupLSH</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">d3</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"n\">d3</span><span class=\"o\">.</span><span class=\"n\">dedup_lsh</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;0+6e37fad4c02c4e46f408fe2f1c858d3f848932a9&#39;,</span>\n<span class=\"go\"> &#39;1+14134eb5f17113a1eebdd2d14913b29661d91caa&#39;,</span>\n<span class=\"go\"> &#39;2+e8ff733fe01200bc8115d1b2fea8af17659797b6&#39;,</span>\n<span class=\"go\"> &#39;3+7780500e8dbf9658ae3073fc59fbf38170bd221d&#39;,</span>\n<span class=\"go\"> &#39;4+58e8071379406406bc159482d9d55c6ef3e407c5&#39;,</span>\n<span class=\"go\"> &#39;5+fceac9bca8ec3f137ee165977ad16cc26f84b0ff&#39;,</span>\n<span class=\"go\"> &#39;6+ca69466d7ba1d4df65b78aca2a48c0477d4191f4&#39;,</span>\n<span class=\"go\"> &#39;7+bc368e0c2dd50adb80802a3968259f5d50c864ee&#39;,</span>\n<span class=\"go\"> &#39;8+58afee22cdbed89dec223b2689fb46f81e4b3fc4&#39;,</span>\n<span class=\"go\"> &#39;9+0e13a8555203fa6c8c7c15fb3cbcddc338bacad8&#39;,</span>\n<span class=\"go\"> &#39;10+6b8d0c47d429ccd01c5c3ac76f2d2c001c40e1b1&#39;,</span>\n<span class=\"go\"> &#39;11+216137f870a95ed51cd116e009faa68f3520372f&#39;,</span>\n<span class=\"go\"> &#39;12+dedd4a4ba549f3c5655d197a73e594525eea44fb&#39;,</span>\n<span class=\"go\"> &#39;13+21b499a6debcbf8c339c6e9b390aa5ebfc866ec8&#39;,</span>\n<span class=\"go\"> &#39;14+32a82d880e2677cc06d32f4a0309220e299e1ad8&#39;,</span>\n<span class=\"go\"> &#39;15+e2afc748a373db953fd26e07cc5ac66adfbe7f4b&#39;,</span>\n<span class=\"go\"> &#39;16+5cc6a70dcccb97aaeb7dc0d26bb42f7610c0e535&#39;,</span>\n<span class=\"go\"> &#39;17+316905fb4aa3a81140e0b387b55fdef29e8dc2a2&#39;,</span>\n<span class=\"go\"> &#39;18+42277ad49a2c2b803909d8c34cad688ea5b04fb7&#39;,</span>\n<span class=\"go\"> &#39;19+53a44ce086b43d32e06c3f66233d566a5927793e&#39;]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.deduplication.LSHDeduplicator", "modulename": "hojichar.filters.deduplication", "qualname": "LSHDeduplicator", "kind": "class", "doc": "<p><code>hojichar.filters.document_filter.GenerateDedupLSH</code> \u3067\u751f\u6210\u3057\u305f\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u57fa\u306b\u91cd\u8907\u5224\u5b9a\u3092\u3057\u307e\u3059\u3002\n\u5bfe\u8c61\u30b3\u30fc\u30d1\u30b9\u304c\u7d04 10^6 \u4ee5\u4e0b (\u301c\u6570\u5341GB\u304c\u76ee\u5b89) \u3067\u3042\u308c\u3070\u3001\u4e8b\u524d\u51e6\u7406\u306a\u3057\u3067\u91cd\u8907\u51e6\u7406\u304c\u53ef\u80fd\u3067\u3059\u3002\n\u4e8b\u524d\u51e6\u7406\u306a\u3057\u3067(\u30aa\u30f3\u30e9\u30a4\u30f3\u306b)\u91cd\u8907\u9664\u53bb\u3092\u884c\u3046\u5834\u5408\u3001<code>online_dedup</code> \u30d5\u30e9\u30b0\u3092 <code>True</code> \u306b\u3057\u307e\u3059\u3002<code>online_dedup</code> \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f <code>True</code> \u3067\u3059\u3002</p>\n\n<p>\u3088\u308a\u5927\u304d\u306a\u30b3\u30fc\u30d1\u30b9\u3067\u306f\u3059\u3079\u3066\u306e\u6587\u66f8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u30e1\u30e2\u30ea\u306b\u8f09\u305b\u308b\u3053\u3068\u304c\u56f0\u96e3\u306b\u306a\u308a\u307e\u3059\u3002\u91cd\u8907\u6587\u66f8\u306f\u6587\u66f8\u5168\u4f53\u306e\u6570\u30d1\u30fc\u30bb\u30f3\u30c8\u3060\u3068\u8003\u3048\u3089\u308c\u308b\u305f\u3081\u3001\u91cd\u8907\u6587\u66f8\u306e\n\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u307f\u3092\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u3068\u3057\u3066\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u8aad\u307f\u8fbc\u3080\u3053\u3068\u3067\u6570\u767eGB\u306e\u30b3\u30fc\u30d1\u30b9\u306b\u5bfe\u3057\u3066\u51e6\u7406\u304c\u3067\u304d\u307e\u3059\u3002\n<code>blacklist_path</code> \u306b\u6307\u5b9a\u3057\u305f\u30d1\u30b9\u306e\u30d5\u30a1\u30a4\u30eb\u304b\u3089\u91cd\u8907\u30cf\u30c3\u30b7\u30e5\u5024\u3092\u8aad\u307f\u8fbc\u307f\u307e\u3059\u3002\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u306e\u30d5\u30a1\u30a4\u30eb\u306f1\u884c\u304a\u304d\u306b\n<code>GenerateDedupLSH</code>\u3067\u751f\u6210\u3057\u305f\u30cf\u30c3\u30b7\u30e5\u5024\u304c\u8a18\u9332\u3055\u308c\u3066\u3044\u308b\u3053\u3068\u3092\u4eee\u5b9a\u3057\u307e\u3059\u3002\n<code>store_blacklist</code> \u30d5\u30e9\u30b0\u3092 <code>True</code> \u306b\u3059\u308b\u3068\u3001\u91cd\u8907\u306e\u3042\u3063\u305f\u30cf\u30c3\u30b7\u30e5\u5024\u3092 <code>LSHDeduplicator.blacklist</code> \u5c5e\u6027\u306b \u6587\u5b57\u5217\u306e\u96c6\u5408\u3068\u3057\u3066\u8a18\u9332\u3057\u307e\u3059\u3002\n\u3053\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u306f\u3001\u30d6\u30e9\u30c3\u30af\u30ea\u30b9\u30c8\u306e\u30cf\u30c3\u30b7\u30e5\u5024\u306e\u30d5\u30a1\u30a4\u30eb\u306e\u4f5c\u6210\u6642\u306a\u3069\u306b\u6709\u52b9\u3067\u3059\u3002<code>store_blacklist</code> \u30d5\u30e9\u30b0\u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f <code>False</code>\u3067\u3059\u3002</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.deduplication.LSHDeduplicator.__init__", "modulename": "hojichar.filters.deduplication", "qualname": "LSHDeduplicator.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">online_dedup</span><span class=\"o\">=</span><span class=\"kc\">True</span>,</span><span class=\"param\">\t<span class=\"n\">blacklist_path</span><span class=\"o\">=</span><span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">store_blacklist</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.deduplication.LSHDeduplicator.apply", "modulename": "hojichar.filters.deduplication", "qualname": "LSHDeduplicator.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d1</span> <span class=\"o\">=</span> <span class=\"n\">GenerateDedupLSH</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;Hello, World.&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d2</span> <span class=\"o\">=</span> <span class=\"n\">GenerateDedupLSH</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u543e\u8f29\u306f\u732b\u3067\u3042\u308b\u3002\u540d\u524d\u306f\u307e\u3060\u7121\u3044\u3002\u3069\u3053\u3067\u751f\u307e\u308c\u305f\u304b\u3068\u3093\u3068\u898b\u5f53\u304c\u3064\u304b\u306c\u3002&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">d3</span> <span class=\"o\">=</span> <span class=\"n\">GenerateDedupLSH</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u543e\u8f29\u306f\u9ce5\u3067\u3042\u308b\u3002\u540d\u524d\u306f\u307e\u3060\u7121\u3044\u3002\u3069\u3053\u3067\u751f\u307e\u308c\u305f\u304b\u3068\u3093\u3068\u898b\u5f53\u304c\u3064\u304b\u306c\u3002&quot;</span><span class=\"p\">))</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">deduplicator</span> <span class=\"o\">=</span> <span class=\"n\">LSHDeduplicator</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">deduplicator</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">d1</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">deduplicator</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">d2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">deduplicator</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">d3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters", "modulename": "hojichar.filters.document_filters", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hojichar.filters.document_filters.ExampleHojiChar", "modulename": "hojichar.filters.document_filters", "qualname": "ExampleHojiChar", "kind": "class", "doc": "<p>\u57fa\u672c\u7684\u306a\u30d5\u30a3\u30eb\u30bf\u306e\u5b9f\u88c5\u4f8b\u3067\u3059. \u672b\u5c3e\u306b'<hojichar>'\u3092\u8ffd\u52a0\u3057\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.ExampleHojiChar.apply", "modulename": "hojichar.filters.document_filters", "qualname": "ExampleHojiChar.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ExampleHojiChar</span><span class=\"p\">()(</span><span class=\"s2\">&quot;hello, world&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;hello, world&lt;hojichar&gt;&#39;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.ExampleDiscardDocumentContainKeyword", "modulename": "hojichar.filters.document_filters", "qualname": "ExampleDiscardDocumentContainKeyword", "kind": "class", "doc": "<p>\u7279\u5b9a\u306e\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u6301\u3064\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7834\u68c4\u3059\u308b\u3088\u3046\u306a\u30d5\u30a3\u30eb\u30bf\u306e\u5b9f\u88c5\u4f8b\u3067\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.ExampleDiscardDocumentContainKeyword.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "ExampleDiscardDocumentContainKeyword.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">keyword</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.ExampleDiscardDocumentContainKeyword.apply", "modulename": "hojichar.filters.document_filters", "qualname": "ExampleDiscardDocumentContainKeyword.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ExampleDiscardDocumentContainKeyword</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u30d0\u30ab&quot;</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u3042\u3044\u3064\u306f\u30d0\u30ab\u3060&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.Identity", "modulename": "hojichar.filters.document_filters", "qualname": "Identity", "kind": "class", "doc": "<p>\u4f55\u3082\u5909\u5316\u3092\u52a0\u3048\u306a\u3044\u30d5\u30a3\u30eb\u30bf\u3067\u3059. \u30c6\u30b9\u30c8\u30fb\u30c7\u30d0\u30c3\u30b0\u306b\u7528\u3044\u3089\u308c\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.Identity.apply", "modulename": "hojichar.filters.document_filters", "qualname": "Identity.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">document</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DiscardAll", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAll", "kind": "class", "doc": "<p>\u3059\u3079\u3066\u306e\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7834\u68c4\u3059\u308b\u30d5\u30a3\u30eb\u30bf\u3067\u3059.\n\u30c6\u30b9\u30c8\u30fb\u30c7\u30d0\u30c3\u30b0\u306b\u7528\u3044\u3089\u308c\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.DiscardAll.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAll.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">document</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.ApplyDiscard", "modulename": "hojichar.filters.document_filters", "qualname": "ApplyDiscard", "kind": "class", "doc": "<p>\u4e0a\u6d41\u30d5\u30a3\u30eb\u30bf\u3067\u7834\u68c4\u3055\u308c\u305f<code>Document</code>\u3092\u7a7a\u6587\u5b57\u5217\u306b\u3057\u307e\u3059.</p>\n\n<p><code>Document.is_rejected=True</code> \u306e \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u7121\u8996\u3055\u308c\u308b\u305f\u3081,\n\u3053\u306e\u30d5\u30a3\u30eb\u30bf\u3092 <code>Compose</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u6e21\u3057\u3066\u3082\u52d5\u4f5c\u3057\u307e\u305b\u3093.\n\u3053\u306e\u30d5\u30a3\u30eb\u30bf\u306f\u4e3b\u306b<code>Compose</code> \u5185\u90e8\u3084, <code>discard_filtered=False</code> \u3092\u6307\u5b9a\n\u3057\u305f\u30c7\u30d0\u30c3\u30b0\u6642\u306a\u3069\u306b\u5229\u7528\u3055\u308c\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.ApplyDiscard.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "ApplyDiscard.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.ApplyDiscard.apply", "modulename": "hojichar.filters.document_filters", "qualname": "ApplyDiscard.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ApplyDiscard</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">,</span> <span class=\"n\">is_rejected</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"go\">&#39;&#39;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DocumentNormalizer", "modulename": "hojichar.filters.document_filters", "qualname": "DocumentNormalizer", "kind": "class", "doc": "<p>Unicode \u306e\u6b63\u898f\u5316\u3092\u3057\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.DocumentNormalizer.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DocumentNormalizer.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DocumentNormalizer.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DocumentNormalizer.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.JSONLoader", "modulename": "hojichar.filters.document_filters", "qualname": "JSONLoader", "kind": "class", "doc": "<p>\u30c6\u30ad\u30b9\u30c8\u3092 Json \u3068\u3057\u3066\u89e3\u91c8\u3057, <code>key</code> \u3067\u6307\u5b9a\u3057\u305f\u8981\u7d20\u3092\u6587\u5b57\u5217\u3068\u3057\u3066\ndoument \u306b\u683c\u7d0d\u3057\u307e\u3059.\u30c7\u30d5\u30a9\u30eb\u30c8\u306e <code>key</code> \u306f 'text' \u3067\u3059.</p>\n\n<p>Json \u306e\u8aad\u307f\u8fbc\u307f, \u3042\u308b\u3044\u306f <code>key</code> \u306e\u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\u3057\u305f\u969b\u306b\u306f\u4f8b\u5916\u3092\u9001\u51fa\u3057\u307e\u3059.\n\u3053\u308c\u3089\u3092\u7121\u8996\u3059\u308b\u5834\u5408\u306f, <code>ignore=True</code> \u306b\u3057\u307e\u3059. \u305d\u306e\u969b, \u8aad\u307f\u8fbc\u307f\u306b\u5931\u6557\n\u3057\u305f\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306f\u7834\u68c4\u3055\u308c\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.JSONLoader.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "JSONLoader.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">key</span><span class=\"o\">=</span><span class=\"s1\">&#39;text&#39;</span>, </span><span class=\"param\"><span class=\"n\">ignore</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.JSONLoader.apply", "modulename": "hojichar.filters.document_filters", "qualname": "JSONLoader.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">JSONLoader</span><span class=\"p\">()(</span> <span class=\"s1\">&#39;{&quot;text&quot;: &quot;hello, world&quot;, &quot;words&quot;: 2}&#39;</span> <span class=\"p\">)</span>\n<span class=\"go\">&#39;hello, world&#39;</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">JSONLoader</span><span class=\"p\">()(</span> <span class=\"s1\">&#39;{&quot;text&quot;: hello, world ....&#39;</span> <span class=\"p\">)</span> <span class=\"c1\"># Broken JSON</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">    </span><span class=\"o\">...</span>\n<span class=\"gr\">json.decoder.JSONDecodeError</span>: <span class=\"n\">Expecting value: line 1 column 10 (char 9)</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">JSONLoader</span><span class=\"p\">()(</span> <span class=\"s1\">&#39;{&quot;words&quot;: 2}&#39;</span> <span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n<span class=\"w\">    </span><span class=\"o\">...</span>\n<span class=\"gr\">KeyError</span>: <span class=\"n\">&#39;text&#39;</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">JSONLoader</span><span class=\"p\">(</span><span class=\"n\">ignore</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s1\">&#39;{&quot;text&quot;: hello, world ....&#39;</span> <span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DocumentLengthFilter", "modulename": "hojichar.filters.document_filters", "qualname": "DocumentLengthFilter", "kind": "class", "doc": "<p><code>min_doc_len</code>, <code>max_doc_len</code> \u3067\u6307\u5b9a\u3057\u305f\u4e0a\u9650\u30fb\u4e0b\u9650\u306e\u7bc4\u56f2\u5185\u306b\u306a\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7834\u68c4\u3057\u307e\u3059.\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f 200\u5b57 \u4ee5\u4e0a 50000\u5b57\u4ee5\u5185\u306e\u30c6\u30ad\u30b9\u30c8\u304c\u53d7\u7406\u3055\u308c\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.DocumentLengthFilter.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DocumentLengthFilter.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">min_doc_len</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"n\">max_doc_len</span><span class=\"o\">=</span><span class=\"kc\">None</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DocumentLengthFilter.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DocumentLengthFilter.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DocumentLengthFilter</span><span class=\"p\">(</span><span class=\"n\">min_doc_len</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;1234&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.NgWordsFilterJa", "modulename": "hojichar.filters.document_filters", "qualname": "NgWordsFilterJa", "kind": "class", "doc": "<p>\u65e5\u672c\u8a9e\u306eNG\u30ef\u30fc\u30c9(\u304a\u3088\u3073\u4e0d\u9069\u5207\u8a9e)\u3092\u542b\u3080\u6587\u66f8\u3092\u7834\u68c4\u3057\u307e\u3059.\n<code>dict_path</code> \u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089, \u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u307e\u3059.\n\u30d5\u30a1\u30a4\u30eb\u306f\u5358\u8a9e\u304c\u6539\u884c\u3067\u7f85\u5217\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059.</p>\n\n<p><code>ignore_confused</code> \u3092 <code>True</code> \u306b\u3059\u308b\u3068,\n\u507d\u967d\u6027\u3092\u8efd\u6e1b\u3059\u308b\u305f\u3081\u306b, \u30ab\u30bf\u30ab\u30ca\u306eNG\u30ef\u30fc\u30c9\u306f\u524d\u5f8c\u306b\u30ab\u30bf\u30ab\u30ca\u304c\u7121\u3044\u5834\u5408\u306e\u307fNG\u5224\u5b9a\u3055\u308c\u307e\u3059.\n\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f <code>False</code> \u3067\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.NgWordsFilterJa.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "NgWordsFilterJa.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dict_path</span>, </span><span class=\"param\"><span class=\"n\">ignore_confused</span><span class=\"o\">=</span><span class=\"kc\">False</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.NgWordsFilterJa.apply", "modulename": "hojichar.filters.document_filters", "qualname": "NgWordsFilterJa.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.NgWordsFilterEn", "modulename": "hojichar.filters.document_filters", "qualname": "NgWordsFilterEn", "kind": "class", "doc": "<p>\u82f1\u8a9e\u306eNG\u30ef\u30fc\u30c9(\u304a\u3088\u3073\u4e0d\u9069\u5207\u8a9e)\u3092\u542b\u3080\u6587\u66f8\u3092\u7834\u68c4\u3057\u307e\u3059.\n<code>dict_path</code> \u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089, \u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u307e\u3059.\n\u30d5\u30a1\u30a4\u30eb\u306f\u5358\u8a9e\u304c\u6539\u884c\u3067\u7f85\u5217\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.NgWordsFilterEn.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "NgWordsFilterEn.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">dict_path</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.NgWordsFilterEn.apply", "modulename": "hojichar.filters.document_filters", "qualname": "NgWordsFilterEn.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DiscardAdultContentJa", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAdultContentJa", "kind": "class", "doc": "<p>\u65e5\u672c\u8a9e\u306e\u30a2\u30c0\u30eb\u30c8\u30ad\u30fc\u30ef\u30fc\u30c9(\u304a\u3088\u3073\u4e0d\u9069\u5207\u8a9e)\u3092\u542b\u3080\u6587\u66f8\u3092\u7834\u68c4\u3057\u307e\u3059.\n<code>dict_path</code> \u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089, \u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u307e\u3059.\n\u30d5\u30a1\u30a4\u30eb\u306f\u5358\u8a9e\u304c\u6539\u884c\u3067\u7f85\u5217\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059.\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e<code>dict_path</code> \u306f /hojichar/dict/adult_keywords_ja.txt \u3067\u3059.</p>\n", "bases": "NgWordsFilterJa"}, {"fullname": "hojichar.filters.document_filters.DiscardAdultContentJa.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAdultContentJa.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dict_path</span><span class=\"o\">=</span><span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/kentashinzato/git-oss/HojiChar/hojichar/dict/adult_keywords_ja.txt&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DiscardAdultContentJa.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAdultContentJa.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardAdultContentJa</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;TEST_STRING_OF_ADULT_KEYWORD&gt;&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardAdultContentJa</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u307b\u3046\u3058\u8336&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n\n<p>\u6319\u52d5\u306f\u6b63\u3057\u3044\u304c\u8aa4\u691c\u77e5\u3057\u3066\u3044\u308b\u30b1\u30fc\u30b9. \u4ed6\u306b\u3082, \u30b5\u30c3\u30af in \u30ea\u30e5\u30c3\u30af\u30b5\u30c3\u30af,</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardAdultContentJa</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u30a2\u30b9\u30d1\u30e9\u30ac\u30b9&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>         <span class=\"c1\"># Matching with NG keyword &quot;\u30a2\u30b9&quot;</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DiscardAdultContentEn", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAdultContentEn", "kind": "class", "doc": "<p>\u82f1\u8a9e\u306e\u30a2\u30c0\u30eb\u30c8\u30ad\u30fc\u30ef\u30fc\u30c9(\u304a\u3088\u3073\u4e0d\u9069\u5207\u8a9e)\u3092\u542b\u3080\u6587\u66f8\u3092\u7834\u68c4\u3057\u307e\u3059.\n<code>dict_path</code> \u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089, \u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u307e\u3059.\n\u30d5\u30a1\u30a4\u30eb\u306f\u5358\u8a9e\u304c\u6539\u884c\u3067\u7f85\u5217\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059.\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e<code>dict_path</code> \u306f /hojichar/dict/adult_keywords_en.txt \u3067\u3059.</p>\n", "bases": "NgWordsFilterEn"}, {"fullname": "hojichar.filters.document_filters.DiscardAdultContentEn.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAdultContentEn.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dict_path</span><span class=\"o\">=</span><span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/kentashinzato/git-oss/HojiChar/hojichar/dict/adult_keywords_en.txt&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DiscardAdultContentEn.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAdultContentEn.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardAdultContentEn</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;TEST_STRING_OF_ADULT_KEYWORD&gt;&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardAdultContentEn</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;hojichar&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DiscardDiscriminationContentJa", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardDiscriminationContentJa", "kind": "class", "doc": "<p>\u65e5\u672c\u8a9e\u306e\u5dee\u5225\u30ad\u30fc\u30ef\u30fc\u30c9(\u304a\u3088\u3073\u4e0d\u9069\u5207\u8a9e)\u3092\u542b\u3080\u6587\u66f8\u3092\u7834\u68c4\u3057\u307e\u3059.\n<code>dict_path</code> \u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089, \u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u307e\u3059.\n\u30d5\u30a1\u30a4\u30eb\u306f\u5358\u8a9e\u304c\u6539\u884c\u3067\u7f85\u5217\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059.\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e<code>dict_path</code> \u306f /hojichar/dict/discrimination_keywords_ja.txt \u3067\u3059.</p>\n", "bases": "NgWordsFilterJa"}, {"fullname": "hojichar.filters.document_filters.DiscardDiscriminationContentJa.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardDiscriminationContentJa.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dict_path</span><span class=\"o\">=</span><span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/kentashinzato/git-oss/HojiChar/hojichar/dict/discrimination_keywords_ja.txt&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DiscardDiscriminationContentJa.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardDiscriminationContentJa.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardDiscriminationContentJa</span><span class=\"p\">()</span><span class=\"o\">.</span>            <span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;TEST_STRING_OF_DISCRIMINATION_KEYWORD&gt;&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardDiscriminationContentJa</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u307b\u3046\u3058\u8336&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DiscardViolenceContentJa", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardViolenceContentJa", "kind": "class", "doc": "<p>\u65e5\u672c\u8a9e\u306e\u66b4\u529b\u30fb\u8105\u8feb\u3092\u793a\u5506\u3059\u308b\u30ad\u30fc\u30ef\u30fc\u30c9\u3092\u542b\u3080\u6587\u66f8\u3092\u7834\u68c4\u3057\u307e\u3059.\n<code>dict_path</code> \u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089, \u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u307e\u3059.\n\u30d5\u30a1\u30a4\u30eb\u306f\u5358\u8a9e\u304c\u6539\u884c\u3067\u7f85\u5217\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059.\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e<code>dict_path</code> \u306f /hojichar/dict/violence_keywords_ja.txt \u3067\u3059.</p>\n", "bases": "NgWordsFilterJa"}, {"fullname": "hojichar.filters.document_filters.DiscardViolenceContentJa.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardViolenceContentJa.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dict_path</span><span class=\"o\">=</span><span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/kentashinzato/git-oss/HojiChar/hojichar/dict/violence_keywords_ja.txt&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DiscardViolenceContentJa.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardViolenceContentJa.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardViolenceContentJa</span><span class=\"p\">()</span>            <span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;TEST_STRING_OF_VIOLENCE_KEYWORD&gt;&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardViolenceContentJa</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u307b\u3046\u3058\u8336&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DiscardBBSComments", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardBBSComments", "kind": "class", "doc": "<p>\u6b63\u898f\u8868\u73fe \"BBS Patern\" \u306b <code>max_allow_num</code> \u56de\u3088\u308a\u305f\u304f\u3055\u3093\u30de\u30c3\u30c1\u3059\u308b\u6587\u66f8\u3092\u7834\u68c4\u3057\u307e\u3059.\n<code>max_allow_num</code> \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f14\u3067\u3059.\n\u6b63\u898f\u8868\u73fe \"BBS Patern\" \u306f\u4e0b\u8a18\u306e\u30ea\u30f3\u30af\u3067\u691c\u8a3c\u53ef\u80fd\u3067\u3059.\n<a href=\"https://regex101.com/r/ybQvL2/1\">https://regex101.com/r/ybQvL2/1</a></p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.DiscardBBSComments.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardBBSComments.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_allowed_num</span><span class=\"o\">=</span><span class=\"mi\">14</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DiscardBBSComments.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardBBSComments.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardBBSComments</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u697d\u5929\u5e02\u5834 \u8cea\u554f \u6295\u7a3f \u30b3\u30e1\u30f3\u30c8 \u30ec\u30d3\u30e5\u30fc &quot;</span><span class=\"o\">*</span><span class=\"mi\">3</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardBBSComments</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u93e1\u9905&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">doc</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DiscardAds", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAds", "kind": "class", "doc": "<p>\u4e3b\u306b\u5e83\u544a\u30ad\u30fc\u30ef\u30fc\u3092<code>max_allow_num</code>\u3088\u308a\u591a\u304f\u542b\u3080\u6587\u66f8\u3092\u7834\u68c4\u3057\u307e\u3059.\n\u30c7\u30d5\u30a9\u30eb\u30c8\u3067<code>max_allow_num</code> \u306f14\u3067\u3059.\n<code>dict_path</code> \u3067\u6307\u5b9a\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u304b\u3089, \u5e83\u544a\u30ad\u30fc\u30ef\u30fc\u30c9\u306e\u30ea\u30b9\u30c8\u3092\u5f97\u307e\u3059.\n\u30d5\u30a1\u30a4\u30eb\u306f\u5358\u8a9e\u304c\u6539\u884c\u3067\u7f85\u5217\u3055\u308c\u305f\u30c6\u30ad\u30b9\u30c8\u30d5\u30a1\u30a4\u30eb\u3067\u3059.\n\u30c7\u30d5\u30a9\u30eb\u30c8\u306e<code>dict_path</code> \u306f /hojichar/dict/advertisement_keywords_ja.txt \u3067\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.DiscardAds.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAds.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dict_path</span><span class=\"o\">=</span><span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/kentashinzato/git-oss/HojiChar/hojichar/dict/advertisement_keywords_ja.txt&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"n\">max_allowed_num</span><span class=\"o\">=</span><span class=\"mi\">14</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DiscardAds.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardAds.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardAds</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u304a\u554f\u3044\u5408\u308f\u305b\u304f\u3060\u3055\u3044 \u55b6\u696d\u6642\u9593 \u3088\u304f\u3042\u308b\u8cea\u554f&quot;</span><span class=\"o\">*</span><span class=\"mi\">5</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardAds</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u304a\u306f\u3088\u3046&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.AcceptJapanese", "modulename": "hojichar.filters.document_filters", "qualname": "AcceptJapanese", "kind": "class", "doc": "<p>\u65e5\u672c\u8a9e\u3067\u306a\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7834\u68c4\u3057\u307e\u3059. \u65e5\u672c\u8a9e\u5224\u5b9a\u306f\u6b21\u306e\u624b\u9806\u3067\u884c\u308f\u308c\u307e\u3059.\n    1. \u30c6\u30ad\u30b9\u30c8\u3092\u5de6\u304b\u3089<code>lookup_size</code> (\u30c7\u30d5\u30a9\u30eb\u30c8\u306750\u5b57) \u53c2\u7167\u3057,\n    \u3072\u3089\u304c\u306a\u30fb\u30ab\u30bf\u30ab\u30ca\u304c\u5b58\u5728\u3059\u308c\u3070\u65e5\u672c\u8a9e\u3068\u5224\u5b9a\u3059\u308b.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.AcceptJapanese.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "AcceptJapanese.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">lookup_size</span><span class=\"o\">=</span><span class=\"mi\">50</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.AcceptJapanese.apply", "modulename": "hojichar.filters.document_filters", "qualname": "AcceptJapanese.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">AcceptJapanese</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;This is English document&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">AcceptJapanese</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"o\">*</span><span class=\"mi\">50</span> <span class=\"o\">+</span> <span class=\"s2\">&quot;\u3042&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">AcceptJapanese</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u307b\u3046\u3058\u8336&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.DiscardRareKuten", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardRareKuten", "kind": "class", "doc": "<p>\u65e5\u672c\u8a9e\u3067\u306a\u3044\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7834\u68c4\u3057\u307e\u3059. \u65e5\u672c\u8a9e\u5224\u5b9a\u306f\u6b21\u306e\u624b\u9806\u3067\u884c\u308f\u308c\u307e\u3059\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u53e5\u70b9\"\u3002\"\u3067\u533a\u5207\u308a, \u5e73\u5747\u6587\u9577\u304c\n<code>max_avarage_sentence_length</code> \u3088\u308a\u9577\u3044\u5834\u5408\u306f\u7834\u68c4\u3057\u307e\u3059.\n<code>max_avarage_sentence_length</code> \u306e\u30c7\u30d5\u30a9\u30eb\u30c8\u5024\u306f100\u3067\u3059.\n\u3053\u306e\u30d5\u30a3\u30eb\u30bf\u306f, \u6587\u7ae0\u4e2d\u306e\u53e5\u70b9\u306e\u5272\u5408\u304c\u5c11\u306a\u3059\u304e\u308b\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7834\u68c4\u3057\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.DiscardRareKuten.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardRareKuten.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">max_average_sentence_length</span><span class=\"o\">=</span><span class=\"mi\">100</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.DiscardRareKuten.apply", "modulename": "hojichar.filters.document_filters", "qualname": "DiscardRareKuten.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardRareKuten</span><span class=\"p\">(</span><span class=\"n\">max_average_sentence_length</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u304a\u306f\u3088\u3002&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">DiscardRareKuten</span><span class=\"p\">(</span><span class=\"n\">max_average_sentence_length</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"n\">Document</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u304a\u306f\u3088\u3046\u3002&quot;</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">is_rejected</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.HeaderFooterTagsRemover", "modulename": "hojichar.filters.document_filters", "qualname": "HeaderFooterTagsRemover", "kind": "class", "doc": "<p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306e\u5192\u982d\u30fb\u672b\u5c3e\u306e\u30c8\u30fc\u30af\u30f3\u3092\u8abf\u67fb\u3057, \u30d8\u30c3\u30c0\u30fc\u30fb\u30d5\u30c3\u30c0\u30fc\u7684\u306a\n\u30bf\u30b0\u304c\u5b58\u5728\u3057\u3066\u3044\u305f\u5834\u5408, \u305d\u306e\u30c8\u30fc\u30af\u30f3\u3092\u9664\u53bb\u3057\u307e\u3059.</p>\n\n<p>\u3053\u306e\u30d5\u30a3\u30eb\u30bf\u3092\u901a\u3059\u524d\u306b, \u4e8b\u524d\u306b\u30bb\u30f3\u30c6\u30f3\u30b9\u30ec\u30d9\u30eb\u306b\u30c8\u30fc\u30ab\u30ca\u30a4\u30ba\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044.\n\u3053\u306e\u30d5\u30a3\u30eb\u30bf\u3067\u306f Document.token \u306b\u306e\u307f\u5909\u66f4\u304c\u52a0\u3048\u3089\u308c\u308b\u306e\u3067, \u51fa\u529b\u524d \u3042\u308b\u3044\u306f \u4e0b\u6d41\u30d5\u30a3\u30eb\u30bf\u3067\nDocument.text \u306b\u5909\u66f4\u3092\u52a0\u3048\u308b\u524d\u306b\u30c8\u30fc\u30af\u30f3\u3092\u30de\u30fc\u30b8\u3057\u3066\u304a\u3044\u3066\u304f\u3060\u3055\u3044.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.HeaderFooterTagsRemover.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "HeaderFooterTagsRemover.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">dict_path</span><span class=\"o\">=</span><span class=\"n\">PosixPath</span><span class=\"p\">(</span><span class=\"s1\">&#39;/Users/kentashinzato/git-oss/HojiChar/hojichar/dict/header_footer_keywords_ja.txt&#39;</span><span class=\"p\">)</span>,</span><span class=\"param\">\t<span class=\"o\">*</span><span class=\"n\">args</span>,</span><span class=\"param\">\t<span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.HeaderFooterTagsRemover.apply", "modulename": "hojichar.filters.document_filters", "qualname": "HeaderFooterTagsRemover.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.HeaderFooterTagsRemover.should_drop_token", "modulename": "hojichar.filters.document_filters", "qualname": "HeaderFooterTagsRemover.should_drop_token", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">HeaderFooterTagsRemover</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">should_drop_token</span><span class=\"p\">(</span><span class=\"n\">Token</span><span class=\"p\">(</span><span class=\"s2\">&quot;&lt;TEST_STRING_OF_KEYWORD&gt;&quot;</span><span class=\"p\">))</span>\n<span class=\"go\">True</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">HeaderFooterTagsRemover</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">should_drop_token</span><span class=\"p\">(</span><span class=\"n\">Token</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u307b\u3046\u3058\u8336&quot;</span><span class=\"p\">))</span>\n<span class=\"go\">False</span>\n</code></pre>\n</div>\n\n<p>Comment.\nOriginal legacy code removed a pattern r\"\u00ab _ | Main | _ \u00bb\" .\nIn the pattern, \"|\" is not escaped, so <strong>ANY</strong> string was eliminated.\nIt seems unintended behavior, so I fix this.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">bool</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.document_filters.MaskPersonalInformation", "modulename": "hojichar.filters.document_filters", "qualname": "MaskPersonalInformation", "kind": "class", "doc": "<p>\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u306b\u542b\u307e\u308c\u308b\u96fb\u8a71\u756a\u53f7\u30fb\u96fb\u5b50\u30e1\u30fc\u30eb\u30a2\u30c9\u30ec\u30b9\u3092\u4e00\u90e8\u30de\u30b9\u30ad\u30f3\u30b0\u3057\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.document_filters.MaskPersonalInformation.__init__", "modulename": "hojichar.filters.document_filters", "qualname": "MaskPersonalInformation.__init__", "kind": "function", "doc": "<h2 id=\"parameters\">Parameters</h2>\n\n<p>p : float, optional\n    Probability that this filter will be applied. Default=1</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.document_filters.MaskPersonalInformation.apply", "modulename": "hojichar.filters.document_filters", "qualname": "MaskPersonalInformation.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;06-1234-5678&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;06-1234-XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;075-123-4567&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;075-123-XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;0166-12-3456&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;0166-12-XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;09808-1-2345&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;09808-1-XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;090-1234-5678&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;090-1234-XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;0751234567&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;075123XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;08012345678&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;0801234XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;\u9023\u7d61\u306f075-123-4567 \u307e\u3067&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;\u9023\u7d61\u306f075-123-XXXX \u307e\u3067&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;+81-80-1234-5678&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;+81-80-1234-XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;+818012345678&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;+81801234XXXX&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;hogehoge@example.com&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;xxxx@yyy.com&#39;</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MaskPersonalInformation</span><span class=\"p\">()(</span><span class=\"s1\">&#39;\u4f55\u304b\u3042\u308c\u3070 hogehoge@example.ne.jp \u307e\u3067\u9023\u7d61&#39;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;\u4f55\u304b\u3042\u308c\u3070 xxxx@yyy.jp \u307e\u3067\u9023\u7d61&#39;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">doc</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.token_filters", "modulename": "hojichar.filters.token_filters", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hojichar.filters.token_filters.TokenAddDebagTag", "modulename": "hojichar.filters.token_filters", "qualname": "TokenAddDebagTag", "kind": "class", "doc": "<p>\u30c8\u30fc\u30af\u30f3\u672b\u5c3e\u306b\u30c7\u30d0\u30c3\u30b0\u7528\u306e\u30bf\u30b0\u3092\u8ffd\u52a0\u3057\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.TokenFilter"}, {"fullname": "hojichar.filters.token_filters.TokenAddDebagTag.apply", "modulename": "hojichar.filters.token_filters", "qualname": "TokenAddDebagTag.apply", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">TokenAddDebagTag</span><span class=\"p\">()(</span><span class=\"s2\">&quot;hello&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">&#39;hello&lt;sep&gt;&#39;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.token_filters.SEOTokenRemover", "modulename": "hojichar.filters.token_filters", "qualname": "SEOTokenRemover", "kind": "class", "doc": "<p>The process is migrated from legacy code.\nI couldn't understand what this process was about, mainly because\nthe regex pattern is too complex.</p>\n", "bases": "hojichar.core.filter_interface.TokenFilter"}, {"fullname": "hojichar.filters.token_filters.SEOTokenRemover.__init__", "modulename": "hojichar.filters.token_filters", "qualname": "SEOTokenRemover.__init__", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">min_average_seo_char_length</span><span class=\"o\">=</span><span class=\"mi\">5</span>, </span><span class=\"param\"><span class=\"o\">*</span><span class=\"n\">args</span>, </span><span class=\"param\"><span class=\"o\">**</span><span class=\"n\">kwargs</span></span>)</span>"}, {"fullname": "hojichar.filters.token_filters.SEOTokenRemover.apply", "modulename": "hojichar.filters.token_filters", "qualname": "SEOTokenRemover.apply", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">token</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Token</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.tokenization", "modulename": "hojichar.filters.tokenization", "kind": "module", "doc": "<p></p>\n"}, {"fullname": "hojichar.filters.tokenization.BlankCharTokenizer", "modulename": "hojichar.filters.tokenization", "qualname": "BlankCharTokenizer", "kind": "class", "doc": "<p>Tokenizer \u306e\u5b9f\u88c5\u4f8b\u3067\u3059.\n\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u3092\u7a7a\u767d\u6587\u5b57\u3067\u30c8\u30fc\u30af\u30f3\u306b\u5206\u5272\u3057\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.tokenization.BlankCharTokenizer.apply", "modulename": "hojichar.filters.tokenization", "qualname": "BlankCharTokenizer.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.tokenization.BlankCharTokenizer.tokenize", "modulename": "hojichar.filters.tokenization", "qualname": "BlankCharTokenizer.tokenize", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">BlankCharTokenizer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">tokenize</span><span class=\"p\">(</span><span class=\"s2\">&quot;hello world&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;hello&#39;, &#39;world&#39;]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.tokenization.MergeTokens", "modulename": "hojichar.filters.tokenization", "qualname": "MergeTokens", "kind": "class", "doc": "<p>Merger \u306e\u5b9f\u88c5\u4f8b\u3067\u3059.\n\u7834\u68c4\u3055\u308c\u3066\u3044\u306a\u3044\u30c8\u30fc\u30af\u30f3\u3092\u7d50\u5408\u3057, Document \u3092\u66f4\u65b0\u3057\u307e\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.tokenization.MergeTokens.merge", "modulename": "hojichar.filters.tokenization", "qualname": "MergeTokens.merge", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">MergeTokens</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">([</span><span class=\"s2\">&quot;hoo&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;bar&quot;</span><span class=\"p\">])</span>\n<span class=\"go\">&#39;hoobar&#39;</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">tokens</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">str</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.tokenization.MergeTokens.apply", "modulename": "hojichar.filters.tokenization", "qualname": "MergeTokens.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.tokenization.SentenceTokenizer", "modulename": "hojichar.filters.tokenization", "qualname": "SentenceTokenizer", "kind": "class", "doc": "<p>\u65e5\u672c\u8a9e\u3092\u60f3\u5b9a\u3057\u305f\u30bb\u30f3\u30c6\u30f3\u30b9\u5358\u4f4d\u306e\u30c8\u30fc\u30ab\u30ca\u30a4\u30b6\u3067\u3059.\n\u53e5\u70b9<code>\u3002</code>\u3067\u6587\u7ae0\u3092\u533a\u5207\u308a\u307e\u3059. \u3053\u308c\u3060\u3051\u3067\u306f\u5b9f\u969b\u306e\u65e5\u672c\u8a9e\u30c6\u30ad\u30b9\u30c8\u3067\u4e0d\u5341\u5206\u306a\u4f8b\u304c\u591a\u304f\u3042\u308b\n(\u53e5\u70b9\u306b\u30d4\u30ea\u30aa\u30c9\u304c\u7528\u3044\u3089\u308c\u308b, \u4f1a\u8a71\u306e\u30ab\u30ae\u30ab\u30c3\u30b3\u5185\u3067\u53e5\u70b9\u304c\u7528\u3044\u3089\u308c\u308b\u306a\u3069)\u305f\u3081,\n\u5c06\u6765\u7684\u306b\u306f\u9069\u5207\u306a\u30bb\u30f3\u30c6\u30f3\u30b9\u5358\u4f4d\u306e\u30c8\u30fc\u30ab\u30ca\u30a4\u30b6\u306b\u7f6e\u304d\u63db\u3048\u3089\u308c\u308b\u3079\u304d\u3067\u3059.</p>\n", "bases": "hojichar.core.filter_interface.Filter"}, {"fullname": "hojichar.filters.tokenization.SentenceTokenizer.apply", "modulename": "hojichar.filters.tokenization", "qualname": "SentenceTokenizer.apply", "kind": "function", "doc": "<p>Definition of filter behavior.</p>\n\n<p>In this method, the filter will modify <code>document.text</code>, or\nset <code>document.is_rejected = True</code> to discard the document.</p>\n\n<p>Do not define a filter that changes both <code>document.text</code> and <code>document.token</code></p>\n\n<h2 id=\"parameters\">Parameters</h2>\n\n<p>document : Document\n    Input document</p>\n\n<h2 id=\"returns\">Returns</h2>\n\n<p>Document\n    Processed Document</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">document</span><span class=\"p\">:</span> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span></span><span class=\"return-annotation\">) -> <span class=\"n\">hojichar</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Document</span>:</span></span>", "funcdef": "def"}, {"fullname": "hojichar.filters.tokenization.SentenceTokenizer.tokenize", "modulename": "hojichar.filters.tokenization", "qualname": "SentenceTokenizer.tokenize", "kind": "function", "doc": "<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">SentenceTokenizer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">tokenize</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u304a\u306f\u3088\u3046\u3002\u304a\u3084\u3059\u307f\u3002\u3042\u308a\u304c\u3068\u3046\u3002\u3055\u3088\u306a\u3089\u3002&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;\u304a\u306f\u3088\u3046\u3002&#39;, &#39;\u304a\u3084\u3059\u307f\u3002&#39;, &#39;\u3042\u308a\u304c\u3068\u3046\u3002&#39;, &#39;\u3055\u3088\u306a\u3089\u3002&#39;]</span>\n</code></pre>\n</div>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">SentenceTokenizer</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">tokenize</span><span class=\"p\">(</span><span class=\"s2\">&quot;\u3055\u3088\u306a\u3089\u3002\u307e\u305f\u6765\u9031&quot;</span><span class=\"p\">)</span>\n<span class=\"go\">[&#39;\u3055\u3088\u306a\u3089\u3002&#39;, &#39;\u307e\u305f\u6765\u9031&#39;]</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">text</span></span><span class=\"return-annotation\">) -> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}];

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();