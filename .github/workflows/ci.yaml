name: CI wowkflow

on:
  push:
    branches:
      - main    
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  pytest:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Test with pytest and doctest
        run: |
          if [ '${{ matrix.python-version }}' == '3.12' ] && [ '${{ matrix.os }}' == 'ubuntu-latest' ]; then
            uv run pytest --cov -v --doctest-modules -m "download_test"
          elif [ '${{ matrix.python-version }}' == '3.9' ] && [ '${{ matrix.os }}' == 'macos-latest' ]; then
            echo "Skip test on macOS with Python 3.9"
          else
            uv run pytest --cov -v --doctest-modules -m "not download_test"
          fi
      - name: Upload coverge reports to Codecov via GitHub Actions
        uses: codecov/codecov-action@v5

  lint_check:
    runs-on: ubuntu-latest
    env:
      python-version: "3.11"

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.python-version }}
      - name: Check black and isort
        run: |
          uvx ruff check --diff .

  mypy_check:
    runs-on: ubuntu-latest
    env:
      python-version: "3.11"

    steps:
      - uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ env.python-version }}
      - name: Install dependencies
        run: uv sync --all-extras
      - name: Mypy type checking
        run: uv run mypy --explicit-package-bases hojichar
