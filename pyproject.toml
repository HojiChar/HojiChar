[project]
name = "hojichar"
dynamic = ["version"]
description = "Text preprocessing management system."
authors = [{ name = "kenta.shinzato", email = "hoppiece@gmail.com" }]
requires-python = ">=3.9, <3.14"
readme = "README.md"
license = "Apache-2.0"
dependencies = [
    "numpy>=1.26,<2.0 ; python_version >= '3.9'",
    "tqdm>=4.65.0,<5",
]

classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Operating System :: MacOS",
  "Operating System :: POSIX :: Linux",
]

[project.optional-dependencies]
all = [
    "fugashi[unidic-lite]>=1.3.2,<2",
    "emoji>=2.13.2,<3",
    "fasttext>=0.9.3,<0.10",
    "requests>=2.32.3,<3",
    "mmh3>=5.0.1,<6",
]
openai = [
    "openai[aiohttp]>=1.89.0",
    "tenacity>=9.1.2"
    ]

[project.urls]
Homepage = "https://github.com/HojiChar/HojiChar"
Repository = "https://github.com/HojiChar/HojiChar"

[project.scripts]
hojichar = "hojichar.cli:main"

[dependency-groups]
dev = [
    "taskipy>=1.10.3,<2",
    "types-requests>=2.32.0.20240914,<3",
]
lint = [
    "mypy~=1.0",
    "types-tqdm>=4.65.0.2,<5",
    "types-requests>=2.32.0.20240914,<3",
    "ruff>=0.11.13",
]
test = [
    "pytest>=7.1.2,<8",
    "pytest-asyncio>=0.23.8",
    "pytest-cov>=4.0.0,<5",
]
docs = ["pdoc>=12.3.1,<13"]

[tool.uv]
default-groups = [
    "dev",
    "lint",
    "test",
]

[[tool.uv.index]]
name = "testpypi"
url = "https://test.pypi.org/simple/"
publish-url = "https://test.pypi.org/legacy/"
explicit = true


[tool.ruff]
line-length = 99

[tool.ruff.lint]
extend-select = [
  "I",   # isort
  "N",   # pep8-naming
  "Q",   # flake8-quotes
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["N802", "N806"]
"*/__init__.py" = ["F401"]

[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.black]
line-length = 99

[tool.isort]
profile = "black"
line_length = 99

[tool.mypy]
disallow_untyped_defs = true
disallow_any_unimported = true
no_implicit_optional = true
check_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
show_error_codes = true

[tool.taskipy.tasks]
lint = "ruff check ."
format = "ruff format ."
test = "pytest . --doctest-modules && mypy ."

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-ra -q"
markers = ["download_test: mark test as a download test for large models"]
